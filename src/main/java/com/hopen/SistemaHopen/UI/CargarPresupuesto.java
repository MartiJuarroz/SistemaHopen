/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hopen.SistemaHopen.UI;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author lisan
 */
public class CargarPresupuesto extends javax.swing.JFrame {
    
    /**
     * Creates new form CargarPresupuestoPrueba
     */
    public CargarPresupuesto() {
        initComponents();
        llenarComboBoxTipoVidrio();
        guardarVidrio1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        tabAluminio = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        presupuestoKg = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        presupuestoAlu = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        remito = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        guardarAluminio = new javax.swing.JButton();
        SalirBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        tabVidro = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        presupuestoVidrio = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        guardarVidrio = new javax.swing.JButton();
        SalirBtn1 = new javax.swing.JButton();
        tabVidro1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        planchasVidrio = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        presupuestoVidrio1 = new javax.swing.JTextField();
        guardarVidrio1 = new javax.swing.JButton();
        SalirBtn5 = new javax.swing.JButton();
        comboVidrio = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        tabAcc = new javax.swing.JPanel();
        guardarAcc = new javax.swing.JButton();
        SalirBtn2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        presupuestoAcc = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        fechaAcc = new com.toedter.calendar.JDateChooser();
        tabManoObra = new javax.swing.JPanel();
        guardarManoObra = new javax.swing.JButton();
        SalirBtn3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cantidadHoras = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        presupuestoManoObra = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        tabViaje = new javax.swing.JPanel();
        guardarViajes = new javax.swing.JButton();
        SalirBtn4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cantidadViajes = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        presupuestoViajes = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        jTabbedPane6.setBackground(new java.awt.Color(51, 204, 255));
        jTabbedPane6.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane6.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N

        tabAluminio.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Kilos Presupuestado");

        presupuestoKg.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoKg.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoKg.setBorder(null);
        presupuestoKg.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoKg.setSelectionColor(new java.awt.Color(51, 204, 255));

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Pesos Presupuestados");

        presupuestoAlu.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoAlu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoAlu.setBorder(null);
        presupuestoAlu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoAlu.setSelectionColor(new java.awt.Color(51, 204, 255));

        remito.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        remito.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        remito.setBorder(null);
        remito.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        remito.setSelectionColor(new java.awt.Color(51, 204, 255));

        guardarAluminio.setBackground(new java.awt.Color(0, 204, 255));
        guardarAluminio.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        guardarAluminio.setForeground(new java.awt.Color(255, 255, 255));
        guardarAluminio.setText("Guardar");
        guardarAluminio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarAluminio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarAluminioActionPerformed(evt);
            }
        });

        SalirBtn.setBackground(new java.awt.Color(255, 153, 51));
        SalirBtn.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        SalirBtn.setForeground(new java.awt.Color(255, 255, 255));
        SalirBtn.setText("Salir");
        SalirBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtnActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Remito");

        javax.swing.GroupLayout tabAluminioLayout = new javax.swing.GroupLayout(tabAluminio);
        tabAluminio.setLayout(tabAluminioLayout);
        tabAluminioLayout.setHorizontalGroup(
            tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAluminioLayout.createSequentialGroup()
                .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabAluminioLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabAluminioLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(tabAluminioLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(presupuestoKg, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabAluminioLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel12)
                        .addGap(88, 88, 88)
                        .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabAluminioLayout.createSequentialGroup()
                                .addGap(0, 3, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabAluminioLayout.createSequentialGroup()
                                .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(remito, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(presupuestoAlu, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                                    .addComponent(jSeparator2))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabAluminioLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guardarAluminio, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SalirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );
        tabAluminioLayout.setVerticalGroup(
            tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAluminioLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(presupuestoKg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(presupuestoAlu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(tabAluminioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarAluminio, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jTabbedPane6.addTab("Aluminio", tabAluminio);

        tabVidro.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Total Presupuestado");

        presupuestoVidrio.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoVidrio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoVidrio.setBorder(null);
        presupuestoVidrio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoVidrio.setSelectionColor(new java.awt.Color(51, 204, 255));

        guardarVidrio.setBackground(new java.awt.Color(0, 204, 255));
        guardarVidrio.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        guardarVidrio.setForeground(new java.awt.Color(255, 255, 255));
        guardarVidrio.setText("Guardar");
        guardarVidrio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarVidrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarVidrioActionPerformed(evt);
            }
        });

        SalirBtn1.setBackground(new java.awt.Color(255, 153, 51));
        SalirBtn1.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        SalirBtn1.setForeground(new java.awt.Color(255, 255, 255));
        SalirBtn1.setText("Salir");
        SalirBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalirBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabVidroLayout = new javax.swing.GroupLayout(tabVidro);
        tabVidro.setLayout(tabVidroLayout);
        tabVidroLayout.setHorizontalGroup(
            tabVidroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabVidroLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guardarVidrio, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SalirBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabVidroLayout.createSequentialGroup()
                .addGroup(tabVidroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabVidroLayout.createSequentialGroup()
                        .addGap(19, 212, Short.MAX_VALUE)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabVidroLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addGap(36, 36, 36)
                        .addComponent(presupuestoVidrio)))
                .addGap(18, 18, 18))
        );
        tabVidroLayout.setVerticalGroup(
            tabVidroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabVidroLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(tabVidroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(presupuestoVidrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addGroup(tabVidroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarVidrio, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane6.addTab("Vidrio", tabVidro);

        tabVidro1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Cantidad Planchas");

        planchasVidrio.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        planchasVidrio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        planchasVidrio.setBorder(null);
        planchasVidrio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        planchasVidrio.setSelectionColor(new java.awt.Color(51, 204, 255));

        presupuestoVidrio1.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoVidrio1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoVidrio1.setBorder(null);
        presupuestoVidrio1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoVidrio1.setSelectionColor(new java.awt.Color(51, 204, 255));

        guardarVidrio1.setBackground(new java.awt.Color(0, 204, 255));
        guardarVidrio1.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        guardarVidrio1.setForeground(new java.awt.Color(255, 255, 255));
        guardarVidrio1.setText("Guardar");
        guardarVidrio1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarVidrio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarVidrio1ActionPerformed(evt);
            }
        });

        SalirBtn5.setBackground(new java.awt.Color(255, 153, 51));
        SalirBtn5.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        SalirBtn5.setForeground(new java.awt.Color(255, 255, 255));
        SalirBtn5.setText("Salir");
        SalirBtn5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalirBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtn5ActionPerformed(evt);
            }
        });

        comboVidrio.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Tipo Vidrio");

        jTextPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextPane1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jTextPane1.setText("Para ingresar los tipos de vidrio debe primero ingresar el presupuesto");
        jScrollPane2.setViewportView(jTextPane1);

        javax.swing.GroupLayout tabVidro1Layout = new javax.swing.GroupLayout(tabVidro1);
        tabVidro1.setLayout(tabVidro1Layout);
        tabVidro1Layout.setHorizontalGroup(
            tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabVidro1Layout.createSequentialGroup()
                .addGroup(tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabVidro1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboVidrio, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabVidro1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabVidro1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator12)
                                    .addComponent(planchasVidrio, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)))
                            .addGroup(tabVidro1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(173, 173, 173))
            .addGroup(tabVidro1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel16)
                .addGap(103, 103, 103)
                .addComponent(presupuestoVidrio1)
                .addGap(521, 521, 521))
            .addGroup(tabVidro1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guardarVidrio1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SalirBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );
        tabVidro1Layout.setVerticalGroup(
            tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabVidro1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(planchasVidrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(presupuestoVidrio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(comboVidrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addGroup(tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabVidro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(guardarVidrio1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SalirBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane6.addTab("TipoVidrio    ", tabVidro1);

        tabAcc.setBackground(new java.awt.Color(255, 255, 255));

        guardarAcc.setBackground(new java.awt.Color(0, 204, 255));
        guardarAcc.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        guardarAcc.setForeground(new java.awt.Color(255, 255, 255));
        guardarAcc.setText("Guardar");
        guardarAcc.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarAccActionPerformed(evt);
            }
        });

        SalirBtn2.setBackground(new java.awt.Color(255, 153, 51));
        SalirBtn2.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        SalirBtn2.setForeground(new java.awt.Color(255, 255, 255));
        SalirBtn2.setText("Salir");
        SalirBtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalirBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtn2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Fecha de Compra");

        presupuestoAcc.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoAcc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoAcc.setBorder(null);
        presupuestoAcc.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoAcc.setSelectionColor(new java.awt.Color(51, 204, 255));

        jLabel11.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Pesos Presupuestados");

        javax.swing.GroupLayout tabAccLayout = new javax.swing.GroupLayout(tabAcc);
        tabAcc.setLayout(tabAccLayout);
        tabAccLayout.setHorizontalGroup(
            tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAccLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabAccLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(guardarAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SalirBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabAccLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabAccLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(54, 54, 54)
                                .addGroup(tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fechaAcc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator10, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)))))
                    .addGroup(tabAccLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(50, 50, 50)
                        .addComponent(presupuestoAcc)))
                .addContainerGap())
        );
        tabAccLayout.setVerticalGroup(
            tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabAccLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(fechaAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(presupuestoAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addGroup(tabAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane6.addTab("Accesorios", tabAcc);

        tabManoObra.setBackground(new java.awt.Color(255, 255, 255));

        guardarManoObra.setBackground(new java.awt.Color(0, 204, 255));
        guardarManoObra.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        guardarManoObra.setForeground(new java.awt.Color(255, 255, 255));
        guardarManoObra.setText("Guardar");
        guardarManoObra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarManoObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarManoObraActionPerformed(evt);
            }
        });

        SalirBtn3.setBackground(new java.awt.Color(255, 153, 51));
        SalirBtn3.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        SalirBtn3.setForeground(new java.awt.Color(255, 255, 255));
        SalirBtn3.setText("Salir");
        SalirBtn3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalirBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtn3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Cantidad Horas");

        cantidadHoras.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        cantidadHoras.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantidadHoras.setBorder(null);
        cantidadHoras.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cantidadHoras.setSelectionColor(new java.awt.Color(51, 204, 255));

        presupuestoManoObra.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoManoObra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoManoObra.setBorder(null);
        presupuestoManoObra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoManoObra.setSelectionColor(new java.awt.Color(51, 204, 255));

        jLabel9.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Pesos Presupuestados");

        javax.swing.GroupLayout tabManoObraLayout = new javax.swing.GroupLayout(tabManoObra);
        tabManoObra.setLayout(tabManoObraLayout);
        tabManoObraLayout.setHorizontalGroup(
            tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManoObraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabManoObraLayout.createSequentialGroup()
                        .addGap(0, 353, Short.MAX_VALUE)
                        .addComponent(guardarManoObra, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SalirBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManoObraLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabManoObraLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(37, 37, 37)
                                .addComponent(cantidadHoras, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
                            .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabManoObraLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(50, 50, 50)
                        .addComponent(presupuestoManoObra)))
                .addContainerGap())
        );
        tabManoObraLayout.setVerticalGroup(
            tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabManoObraLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cantidadHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(presupuestoManoObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addGroup(tabManoObraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarManoObra, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane6.addTab("Mano de Obra", tabManoObra);

        tabViaje.setBackground(new java.awt.Color(255, 255, 255));

        guardarViajes.setBackground(new java.awt.Color(0, 204, 255));
        guardarViajes.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        guardarViajes.setForeground(new java.awt.Color(255, 255, 255));
        guardarViajes.setText("Guardar");
        guardarViajes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarViajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarViajesActionPerformed(evt);
            }
        });

        SalirBtn4.setBackground(new java.awt.Color(255, 153, 51));
        SalirBtn4.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        SalirBtn4.setForeground(new java.awt.Color(255, 255, 255));
        SalirBtn4.setText("Siguiente");
        SalirBtn4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalirBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtn4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Cantidad Viajes");

        cantidadViajes.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        cantidadViajes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantidadViajes.setBorder(null);
        cantidadViajes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cantidadViajes.setSelectionColor(new java.awt.Color(51, 204, 255));

        presupuestoViajes.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        presupuestoViajes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presupuestoViajes.setBorder(null);
        presupuestoViajes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presupuestoViajes.setSelectionColor(new java.awt.Color(51, 204, 255));

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Pesos Presupuestados");

        javax.swing.GroupLayout tabViajeLayout = new javax.swing.GroupLayout(tabViaje);
        tabViaje.setLayout(tabViajeLayout);
        tabViajeLayout.setHorizontalGroup(
            tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabViajeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabViajeLayout.createSequentialGroup()
                        .addGap(0, 353, Short.MAX_VALUE)
                        .addComponent(guardarViajes, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SalirBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabViajeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabViajeLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(37, 37, 37)
                                .addComponent(cantidadViajes, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabViajeLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(50, 50, 50)
                        .addComponent(presupuestoViajes)))
                .addContainerGap())
        );
        tabViajeLayout.setVerticalGroup(
            tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabViajeLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cantidadViajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(presupuestoViajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addGroup(tabViajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarViajes, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane6.addTab("Viajes", tabViaje);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane6.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void llenarComboBoxTipoVidrio(){
        PreparedStatement ps; 
        try{
            Connection con = ConexionDB.getConnection();
            String sql ="SELECT v.nombre_tipo_vidrio FROM tipo_vidrio v";
            ps = ConexionDB.getConnection().prepareStatement(sql);
            ResultSet resultSet = ps.executeQuery();
        
        while(resultSet.next()){
            String item = resultSet.getString(1);
            comboVidrio.addItem(item);
        }
        
        ConexionDB.endConnection(con);
         }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public int getIDFromClase(String nombreTipo, String material, String tipoNombre){

        PreparedStatement ps;
        
          try{
            Connection con = ConexionDB.getConnection();
            String sql ="SELECT id FROM "+material+" m WHERE nombre_"+tipoNombre+" = ?";
            ps = ConexionDB.getConnection().prepareStatement(sql);
            
            ps.setString(1, nombreTipo);
            
            ResultSet resultSet = ps.executeQuery();
            
            if (resultSet.next()) {
                int id = resultSet.getInt("id");
                return id;
            }
            ConexionDB.endConnection(con);
          }catch(Exception e){
            e.printStackTrace();
        }
        return 0;
    }
    
    public String getNameFromVidrio(){
        String vidrio = comboVidrio.getSelectedItem().toString();
        return vidrio;
    }
    
    private void guardarAluminioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarAluminioActionPerformed
        // TODO add your handling code here:
        CargarObra co = new CargarObra();
        double kiloPresupuestado = 0.0;
        String rto = null;
        Double totalPresupuestado = 0.0;
        
        if (!presupuestoKg.getText().isEmpty()){
            kiloPresupuestado = Double.parseDouble(presupuestoKg.getText());
        }
        if (!remito.getText().isEmpty()){
            rto = remito.getText();
        }
        if (!presupuestoAlu.getText().isEmpty()){
            totalPresupuestado = Double.parseDouble(presupuestoAlu.getText());
        }
        String colorAlu = co.getNameFromColorAluminio();

        PreparedStatement ps;

        try{
            Connection con = ConexionDB.getConnection();
            String sql ="INSERT INTO aluminio (total_presupuesto, remito, kilo_presupuestado, color_aluminio_id) VALUES (?,?,?,?)";
            ps = ConexionDB.getConnection().prepareStatement(sql);

            ps.setDouble(1, totalPresupuestado);
            ps.setString(2, rto);
            ps.setDouble(3, kiloPresupuestado);
            ps.setInt(4, getIDFromClase(colorAlu, "color_aluminio", "color"));

            ps.executeUpdate();
            
            //Buscamos el id de obra y el de aluminio
            String sql2 = "SELECT id FROM aluminio ORDER by id DESC LIMIT 1";
            
            ps = ConexionDB.getConnection().prepareStatement(sql2);
            
            ResultSet resultSet = ps.executeQuery();
            int idAlu = 0;
            if(resultSet.next()){
                idAlu = resultSet.getInt(1);
            }
            
            //Esta query busca el id mas grande que siempre seria el ultimo ingresado            
            String sql4 = "SELECT id FROM obra ORDER by id DESC LIMIT 1";
            ps = ConexionDB.getConnection().prepareStatement(sql4);
            resultSet = ps.executeQuery();
            
            int idObra = 0;
            if(resultSet.next()){
                idObra = resultSet.getInt(1);
            }
            
            
            //ya tenemos los id, ahora lo asociamos a la obra
            String sql3 = "UPDATE obra SET aluminio_id = '"+idAlu+"' WHERE id = '"+idObra+"'";
            ps = ConexionDB.getConnection().prepareStatement(sql3);
            
            ps.executeUpdate();
            //ya estaria asociado

            JOptionPane.showMessageDialog(null, "Datos guardados");
            ConexionDB.endConnection(con);

        }catch(Exception e){
            e.printStackTrace();
        }
        presupuestoKg.setText("");
        presupuestoAlu.setText("");
        remito.setText("");
    }//GEN-LAST:event_guardarAluminioActionPerformed

    private void SalirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtnActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Seguro que quiere ir al menu principal?, perderá los datos no guardados.", "Confirmar salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
            == JOptionPane.YES_OPTION){
            try {
                new Menu().setVisible(true);
                dispose();
            } catch (Exception ex) {
                Logger.getLogger(CargarObra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SalirBtnActionPerformed

    private void guardarAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarAccActionPerformed
        // TODO add your handling code here:
        java.util.Date fecha = null;
        java.sql.Date fechaDB = null;
        Double totalPresupuestado = 0.0;     
        
        if (fechaAcc.getDate() != null){
            fecha = fechaAcc.getDate();
            long timeInMilliSecs = fecha.getTime();
            fechaDB = new java.sql.Date(timeInMilliSecs);
        }
            
        if (!presupuestoAcc.getText().isEmpty()){
            totalPresupuestado = Double.parseDouble(presupuestoAcc.getText());
        }

        PreparedStatement ps;

        try{
            Connection con = ConexionDB.getConnection();
            String sql ="INSERT INTO compra_accesorio (total_presupuesto, fecha_compra) VALUES (?,?)";
            ps = ConexionDB.getConnection().prepareStatement(sql);

            ps.setDouble(1, totalPresupuestado);
            ps.setDate(2, fechaDB);

            ps.executeUpdate();

            //ACCESORIO ES COMO VIDRIO CREO
            String sql2 = "SELECT id FROM compra_accesorio ORDER by id DESC LIMIT 1";
            
            ps = ConexionDB.getConnection().prepareStatement(sql2);
            
            ResultSet resultSet = ps.executeQuery();
            int idAcc = 0;
            if(resultSet.next()){
                idAcc = resultSet.getInt(1);
            }
            
            //Esta query busca el id mas grande que siempre seria el ultimo ingresado            
            String sql4 = "SELECT id FROM obra ORDER by id DESC LIMIT 1";
            ps = ConexionDB.getConnection().prepareStatement(sql4);
            resultSet = ps.executeQuery();
            
            int idObra = 0;
            if(resultSet.next()){
                idObra = resultSet.getInt(1);
            }
            
            
           //Insertamos los ids en la tabla de asociacion
            //String sql3 = "UPDATE obra SET compra_vidrio_id = '"+idVidrio+"' WHERE id = '"+idObra+"'";
            String sql3 = "UPDATE obra SET compra_accesorio_id = '"+idAcc+"' WHERE id = '"+idObra+"'";
            ps = ConexionDB.getConnection().prepareStatement(sql3);
            
            ps.executeUpdate();
            //ya estaria asociado*/
            
            JOptionPane.showMessageDialog(null, "Datos guardados");
            ConexionDB.endConnection(con);

        }catch(Exception e){
            e.printStackTrace();
        }
        fechaAcc = null;
        presupuestoAcc.setText("");
    }//GEN-LAST:event_guardarAccActionPerformed

    private void SalirBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtn2ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "¿Seguro que quiere ir al menu principal? Perderá los datos no guardados.", "Confirmar salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
            == JOptionPane.YES_OPTION){
            try {
                new Menu().setVisible(true);
                dispose();
            } catch (Exception ex) {
                Logger.getLogger(CargarObra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SalirBtn2ActionPerformed

    private void guardarManoObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarManoObraActionPerformed
        // TODO add your handling code here:
        int cantHoras = 0;
        Double totalPresupuestado = 0.0;
        
        if (!cantidadHoras.getText().isEmpty()){
            cantHoras = Integer.parseInt(cantidadHoras.getText());
        }
        if (!presupuestoManoObra.getText().isEmpty()){
            totalPresupuestado = Double.parseDouble(presupuestoManoObra.getText());
        }

        PreparedStatement ps;

        try{
            Connection con = ConexionDB.getConnection();
            String sql ="INSERT INTO mano_obra (total_presupuesto, horasmo) VALUES (?,?)";
            ps = ConexionDB.getConnection().prepareStatement(sql);

            ps.setDouble(1, totalPresupuestado);
            ps.setInt(2, cantHoras);

            ps.executeUpdate();
            
            String sql2 = "SELECT id FROM mano_obra ORDER by id DESC LIMIT 1";
            
            ps = ConexionDB.getConnection().prepareStatement(sql2);
            
            ResultSet resultSet = ps.executeQuery();
            int idMO = 0;
            if(resultSet.next()){
                idMO = resultSet.getInt(1);
            }
            
            //Esta query busca el id mas grande que siempre seria el ultimo ingresado            
            String sql4 = "SELECT id FROM obra ORDER by id DESC LIMIT 1";
            ps = ConexionDB.getConnection().prepareStatement(sql4);
            resultSet = ps.executeQuery();
            
            int idObra = 0;
            if(resultSet.next()){
                idObra = resultSet.getInt(1);
            }
            
            
            //ya tenemos los id, ahora lo asociamos a la obra
            String sql3 = "UPDATE obra SET mano_obra_id = '"+idMO+"' WHERE id = '"+idObra+"'";
            ps = ConexionDB.getConnection().prepareStatement(sql3);
            
            ps.executeUpdate();
            //ya estaria asociado

            JOptionPane.showMessageDialog(null, "Datos guardados");
            ConexionDB.endConnection(con);

        }catch(Exception e){
            e.printStackTrace();
        }
        cantidadHoras.setText("");
        presupuestoManoObra.setText("");
    }//GEN-LAST:event_guardarManoObraActionPerformed

    private void SalirBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtn3ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "¿Seguro que quiere ir al menu principal? Perderá los datos no guardados.", "Confirmar salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
            == JOptionPane.YES_OPTION){
            try {
                new Menu().setVisible(true);
                dispose();
            } catch (Exception ex) {
                Logger.getLogger(CargarObra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SalirBtn3ActionPerformed

    private void guardarViajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarViajesActionPerformed
        // TODO add your handling code here:
        int cantViajes = 0;
        Double totalPresupuestado = 0.0;
        
        if (!cantidadViajes.getText().isEmpty()){
            cantViajes = Integer.parseInt(cantidadViajes.getText());
        }
        if (!presupuestoViajes.getText().isEmpty()){
            totalPresupuestado = Double.parseDouble(presupuestoViajes.getText());
        }

        PreparedStatement ps;

        try{
            Connection con = ConexionDB.getConnection();
            String sql ="INSERT INTO viaje (total_presupuesto, cant_viajes_presupuesto) VALUES (?,?)";
            ps = ConexionDB.getConnection().prepareStatement(sql);

            ps.setDouble(1, totalPresupuestado);
            ps.setInt(2, cantViajes);

            ps.executeUpdate();
            
            String sql2 = "SELECT id FROM viaje ORDER by id DESC LIMIT 1";
            
            ps = ConexionDB.getConnection().prepareStatement(sql2);
            
            ResultSet resultSet = ps.executeQuery();
            int idViaje = 0;
            if(resultSet.next()){
                idViaje = resultSet.getInt(1);
            }
            
            //Esta query busca el id mas grande que siempre seria el ultimo ingresado            
            String sql4 = "SELECT id FROM obra ORDER by id DESC LIMIT 1";
            ps = ConexionDB.getConnection().prepareStatement(sql4);
            resultSet = ps.executeQuery();
            
            int idObra = 0;
            if(resultSet.next()){
                idObra = resultSet.getInt(1);
            }
            
            
            //ya tenemos los id, ahora lo asociamos a la obra
            String sql3 = "UPDATE obra SET viaje_id = '"+idViaje+"' WHERE id = '"+idObra+"'";
            ps = ConexionDB.getConnection().prepareStatement(sql3);
            
            ps.executeUpdate();
            //ya estaria asociado

            JOptionPane.showMessageDialog(null, "Datos guardados");
            ConexionDB.endConnection(con);

        }catch(Exception e){
            e.printStackTrace();
        }
        cantidadViajes.setText("");
        presupuestoViajes.setText("");
    }//GEN-LAST:event_guardarViajesActionPerformed

    private void SalirBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtn4ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "¿Seguro que quiere ir al menu principal? Perderá los datos no guardados.", "Confirmar salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
            == JOptionPane.YES_OPTION){
            try {
                new Menu().setVisible(true);
                dispose();
            } catch (Exception ex) {
                Logger.getLogger(CargarObra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SalirBtn4ActionPerformed

    public int getIDCompraVidrio(){
        
        PreparedStatement ps;
        
        try{
            Connection con = ConexionDB.getConnection();
            
            String sql2 = "SELECT id FROM compra_vidrio ORDER by id DESC LIMIT 1";
            
            ps = ConexionDB.getConnection().prepareStatement(sql2);
            
            ResultSet resultSet = ps.executeQuery();
            
            if (resultSet.next()) {
            int idCompra = resultSet.getInt(1);
            return idCompra;
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }    
        
        return 0;
    }
    
    
    private void guardarVidrio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarVidrio1ActionPerformed
        // TODO add your handling code here:               
        int cantPlanchas = 0;
        String tipoVidrio = comboVidrio.getSelectedItem().toString();
        
        if (!planchasVidrio.getText().isEmpty()){
            cantPlanchas = Integer.parseInt(planchasVidrio.getText());
        }
                
        PreparedStatement ps;
        
        
        
         try{
            Connection con = ConexionDB.getConnection();
            
            String sql ="SELECT id FROM tipo_vidrio WHERE nombre_tipo_vidrio = ?";
            ps = ConexionDB.getConnection().prepareStatement(sql);
            
            ps.setString(1, tipoVidrio);
            
            ResultSet resultSet = ps.executeQuery();
            if (resultSet.next()) {
             int idTipoVi = resultSet.getInt("id");
                
                String sql3 ="INSERT INTO compra_vidrio_detalle (cant_planchas, tipovidrio_id, compra_vidrio_id) VALUES (?,?,?)";
                ps = ConexionDB.getConnection().prepareStatement(sql3);
                ps.setInt(1, cantPlanchas);
                ps.setInt(2, idTipoVi);
                ps.setInt(3, getIDCompraVidrio());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados, ingrese la cantidad de otro tipo de vidrio si hay");
                planchasVidrio.setText("");
                
        /*      String sql3 ="INSERT INTO compra_vidrio_lista_detalle_compra (compra_vidrio_id, lista_detalle_compra_id) VALUES (?,?)";
                ps = ConexionDB.getConnection().prepareStatement(sql2);
                ps.setInt(1, );
                ps.setInt(2, id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados, ingrese la cantidad de otro tipo de vidrio si hay");
                planchasVidrio.setText("");*/
                
            }else{
                JOptionPane.showMessageDialog(null, "Seleccione un tipo de vidrio", "Seleccione un tipo de vidrio", JOptionPane.INFORMATION_MESSAGE);
            }
            
          }catch(Exception e){
            e.printStackTrace();
        }    
        
    }//GEN-LAST:event_guardarVidrio1ActionPerformed

    private void SalirBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtn5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirBtn5ActionPerformed

    private void SalirBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtn1ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "¿Seguro que quiere ir al menu principal? Perderá los datos no guardados.", "Confirmar salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
            == JOptionPane.YES_OPTION){
            try {
                new Menu().setVisible(true);
                dispose();
            } catch (Exception ex) {
                Logger.getLogger(CargarObra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SalirBtn1ActionPerformed

    private void guardarVidrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarVidrioActionPerformed
        // TODO add your handling code here:
        Double totalPresupuestado = 0.0;
        
        if (!presupuestoVidrio.getText().isEmpty()){
        totalPresupuestado = Double.parseDouble(presupuestoVidrio.getText());
        }

        PreparedStatement ps;

        try{
            Connection con = ConexionDB.getConnection();
            String sql ="INSERT INTO compra_vidrio (total_presupuesto) VALUES (?)";
            ps = ConexionDB.getConnection().prepareStatement(sql);

            ps.setDouble(1, totalPresupuestado);
            
            ps.executeUpdate();

            //Buscamos el id de obra y el del vidrio
            String sql2 = "SELECT id FROM compra_vidrio ORDER by id DESC LIMIT 1";

            ps = ConexionDB.getConnection().prepareStatement(sql2);

            ResultSet resultSet = ps.executeQuery();
            int idVidrio = 0;
            if(resultSet.next()){
                idVidrio = resultSet.getInt(1);
            }

            //Esta query busca el id mas grande que siempre seria el ultimo ingresado
            String sql4 = "SELECT id FROM obra ORDER by id DESC LIMIT 1";
            ps = ConexionDB.getConnection().prepareStatement(sql4);
            resultSet = ps.executeQuery();

            int idObra = 0;
            if(resultSet.next()){
                idObra = resultSet.getInt(1);
            }

      //   Insertamos los dos id en la tabla creada para esta asociacion
   //   String sql3 = "UPDATE obra SET viaje_id = '"+idViaje+"' WHERE id = '"+idObra+"'";
            String sql3 = "UPDATE obra SET compra_vidrio_id = '"+idVidrio+"' WHERE id = '"+idObra+"'";
            ps = ConexionDB.getConnection().prepareStatement(sql3);

            ps.executeUpdate();
            //ya estaria asociado*/

            JOptionPane.showMessageDialog(null, "Datos guardados");
            ConexionDB.endConnection(con);

        }catch(Exception e){
            e.printStackTrace();
        }
        presupuestoVidrio.setText("");
        guardarVidrio1.setVisible(true);
    }//GEN-LAST:event_guardarVidrioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CargarPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CargarPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CargarPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargarPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CargarPresupuesto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SalirBtn;
    private javax.swing.JButton SalirBtn1;
    private javax.swing.JButton SalirBtn2;
    private javax.swing.JButton SalirBtn3;
    private javax.swing.JButton SalirBtn4;
    private javax.swing.JButton SalirBtn5;
    private javax.swing.JTextField cantidadHoras;
    private javax.swing.JTextField cantidadViajes;
    private javax.swing.JComboBox<String> comboVidrio;
    private com.toedter.calendar.JDateChooser fechaAcc;
    private javax.swing.JButton guardarAcc;
    private javax.swing.JButton guardarAluminio;
    private javax.swing.JButton guardarManoObra;
    private javax.swing.JButton guardarViajes;
    private javax.swing.JButton guardarVidrio;
    private javax.swing.JButton guardarVidrio1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField planchasVidrio;
    private javax.swing.JTextField presupuestoAcc;
    private javax.swing.JTextField presupuestoAlu;
    private javax.swing.JTextField presupuestoKg;
    private javax.swing.JTextField presupuestoManoObra;
    private javax.swing.JTextField presupuestoViajes;
    private javax.swing.JTextField presupuestoVidrio;
    private javax.swing.JTextField presupuestoVidrio1;
    private javax.swing.JTextField remito;
    private javax.swing.JPanel tabAcc;
    private javax.swing.JPanel tabAluminio;
    private javax.swing.JPanel tabManoObra;
    private javax.swing.JPanel tabViaje;
    private javax.swing.JPanel tabVidro;
    private javax.swing.JPanel tabVidro1;
    // End of variables declaration//GEN-END:variables
}
